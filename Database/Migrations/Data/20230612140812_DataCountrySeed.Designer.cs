// <auto-generated />
using System;
using Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Database.Migrations.Data
{
    [DbContext(typeof(DataDbContext))]
    [Migration("20230612140812_DataCountrySeed")]
    partial class DataCountrySeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Database.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3d1c862a-8f45-4f41-a3f3-570811a430cd"),
                            Name = "Brazil"
                        },
                        new
                        {
                            Id = new Guid("53439402-f7aa-4d36-b654-947c555b80d0"),
                            Name = "South Africa"
                        });
                });

            modelBuilder.Entity("Database.Entities.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Database.Entities.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d90bc179-371f-4bce-b756-6b32ab96b2a9"),
                            CountryId = new Guid("3d1c862a-8f45-4f41-a3f3-570811a430cd"),
                            Name = "North"
                        },
                        new
                        {
                            Id = new Guid("e2c1f27b-6be7-4483-aeac-d35994abbd5e"),
                            CountryId = new Guid("3d1c862a-8f45-4f41-a3f3-570811a430cd"),
                            Name = "Northeast"
                        },
                        new
                        {
                            Id = new Guid("2c70ae23-454b-4916-8a40-17e28a75ffec"),
                            CountryId = new Guid("3d1c862a-8f45-4f41-a3f3-570811a430cd"),
                            Name = "Central-West"
                        },
                        new
                        {
                            Id = new Guid("77d7ac21-6fe6-4df3-8d9d-103412fdac09"),
                            CountryId = new Guid("3d1c862a-8f45-4f41-a3f3-570811a430cd"),
                            Name = "Southeast"
                        },
                        new
                        {
                            Id = new Guid("a666453a-98aa-4189-9ab5-c4c5bc01892e"),
                            CountryId = new Guid("3d1c862a-8f45-4f41-a3f3-570811a430cd"),
                            Name = "South"
                        },
                        new
                        {
                            Id = new Guid("e3da3f83-61e6-4a89-93c5-3db02d85686b"),
                            CountryId = new Guid("53439402-f7aa-4d36-b654-947c555b80d0"),
                            Name = "Gauteng"
                        },
                        new
                        {
                            Id = new Guid("6e62fbf8-c483-49cb-b028-dc506253b5bc"),
                            CountryId = new Guid("53439402-f7aa-4d36-b654-947c555b80d0"),
                            Name = "Mpumalanga"
                        },
                        new
                        {
                            Id = new Guid("63b2726a-ac0b-4116-bd49-6d79b1f3001d"),
                            CountryId = new Guid("53439402-f7aa-4d36-b654-947c555b80d0"),
                            Name = "KwaZulu-Natal"
                        },
                        new
                        {
                            Id = new Guid("88b2ca74-c15a-4233-94c3-47a916521736"),
                            CountryId = new Guid("53439402-f7aa-4d36-b654-947c555b80d0"),
                            Name = "North West"
                        },
                        new
                        {
                            Id = new Guid("8d12024c-c78d-449d-9adc-de35518e406e"),
                            CountryId = new Guid("53439402-f7aa-4d36-b654-947c555b80d0"),
                            Name = "Limpopo"
                        },
                        new
                        {
                            Id = new Guid("65da3eab-f9d2-4e31-aeb9-3c9b8bd249cd"),
                            CountryId = new Guid("53439402-f7aa-4d36-b654-947c555b80d0"),
                            Name = "Western Cape"
                        },
                        new
                        {
                            Id = new Guid("500f8d34-f7e0-4ca2-9f7a-1d41ae166af3"),
                            CountryId = new Guid("53439402-f7aa-4d36-b654-947c555b80d0"),
                            Name = "Free State"
                        },
                        new
                        {
                            Id = new Guid("bf0abf09-2d00-41bc-a95f-e5277f382b6d"),
                            CountryId = new Guid("53439402-f7aa-4d36-b654-947c555b80d0"),
                            Name = "Eastern Cape"
                        },
                        new
                        {
                            Id = new Guid("01409dbc-d3c4-4c77-8b2e-99ae560e7a4b"),
                            CountryId = new Guid("53439402-f7aa-4d36-b654-947c555b80d0"),
                            Name = "Northern Cape"
                        },
                        new
                        {
                            Id = new Guid("49a3f3ab-57e7-422a-8b60-b45e068f0b3c"),
                            CountryId = new Guid("53439402-f7aa-4d36-b654-947c555b80d0"),
                            Name = "South Africa"
                        });
                });

            modelBuilder.Entity("Database.Entities.Region", b =>
                {
                    b.HasOne("Database.Entities.Country", null)
                        .WithMany("Regions")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Database.Entities.Country", b =>
                {
                    b.Navigation("Regions");
                });
#pragma warning restore 612, 618
        }
    }
}
